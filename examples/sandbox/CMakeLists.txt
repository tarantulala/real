### Helpers
set(REAL_SANDBOX_TARGET_NAME "${META_REAL_PROJECT_NAME}-sandbox")

### Target
add_executable(
		${REAL_SANDBOX_TARGET_NAME}
		EXCLUDE_FROM_ALL
		sandbox.cpp
)

target_link_libraries(
		${REAL_SANDBOX_TARGET_NAME}
		PRIVATE
		${REAL_LIBRARY_TARGET_NAME}
)

# Properties
set_target_properties(
		${REAL_SANDBOX_TARGET_NAME} PROPERTIES

		# Folder
		FOLDER ${META_REAL_PROJECT_FULL_NAME}/examples/sandbox

		# Version
		VERSION ${META_REAL_VERSION}
		SOVERSION ${META_REAL_VERSION_MAJOR}

		# C++
		CXX_STANDARD ${CXX_STANDARD_DEFAULT}
		CXX_STANDARD_REQUIRED ON
		CXX_EXTENSIONS OFF

		# C
		C_STANDARD ${C_STANDARD_DEFAULT}
		C_STANDARD_REQUIRED ON
		C_EXTENSIONS OFF

		# Other
		VS_DEBUGGER_WORKING_DIRECTORY "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}"
)

## RenderDoc
set(REAL_RDOC_WORKING_DIR "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
set(REAL_RDOC_SANDBOX_FILE "$<TARGET_FILE:${REAL_SANDBOX_TARGET_NAME}>")
set(REAL_RDOC_CONFIG_OUTFILE "${CMAKE_BINARY_DIR}/rdoc/settings.cap")

configure_file("${CMAKE_SOURCE_DIR}/rdoc/settings.cap" "${REAL_RDOC_CONFIG_OUTFILE}")

# FIXME: solve problem with single and multiconfig generators
if (CMAKE_CONFIGURATION_TYPES)
	file(
			GENERATE
			OUTPUT "${REAL_RDOC_CONFIG_OUTFILE}.$<CONFIG>"
			INPUT "${REAL_RDOC_CONFIG_OUTFILE}"
	)
else ()
	file(
			GENERATE
			OUTPUT "${REAL_RDOC_CONFIG_OUTFILE}"
			INPUT "${REAL_RDOC_CONFIG_OUTFILE}"
	)
endif ()